name: Weekly Update with Conflict Resolution

on:
  schedule:
    - cron:  '0 0 * * 1' # 每周一凌晨0点执行
  workflow_dispatch: # 允许手动触发

jobs:
  update-and-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # 获取所有历史记录，以便于检查更新

    - name: Pull latest code from upstream
      run: |
        # 添加上游仓库
        git remote add upstream https://github.com/2hacc/TVBox.git || true
        git fetch upstream
    
        # 暂存或备份不希望被覆盖的文件
        cp replaceUrl.sh replaceUrl.sh.bak
        cp -r .github/workflows .github/workflows.bak
    
        # 合并上游主分支，使用 --no-commit 暂停提交以便手动处理冲突
        git merge upstream/main --no-edit --no-commit || true
    
        # 恢复不希望被覆盖的文件
        cp replaceUrl.sh.bak replaceUrl.sh
        cp -r .github/workflows.bak .github/workflows
    
        # 添加所有更改，包括恢复的文件和解决的冲突
        git add .
    
        # 提交更改
        git commit -m "Merged with upstream and restored specific files"
        
    - name: Debug 打印 replaceUrl.sh 内容
      run: cat replaceUrl.sh

    - name: Run replaceUrl.sh script
      run: |
        chmod +x replaceUrl.sh # 确保脚本可执行
        ./replaceUrl.sh

    - name: Debug 打印文件内容
      run: |
        cat /home/runner/work/TVBox/TVBox/oktv.json
        cat /home/runner/work/TVBox/TVBox/h/h.json

        
    - name: Debug 查看工作目录状态
      run: git status

    - name: Debug 列出未跟踪的文件
      run: git ls-files --others --exclude-standard
      
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        echo "提交的文件:"
        git diff --cached --name-only
        git commit -m "Weekly update" || echo "No changes to commit"

    - name: Push changes
      run: |
        git push origin main # 提交更改到你的仓库
